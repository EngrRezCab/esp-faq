GPIO & RTC GPIO
===============

:link_to_translation:`en:[English]`

.. raw:: html

   <style>
   body {counter-reset: h2}
     h2 {counter-reset: h3}
     h2:before {counter-increment: h2; content: counter(h2) ". "}
     h3:before {counter-increment: h3; content: counter(h2) "." counter(h3) ". "}
     h2.nocount:before, h3.nocount:before, { content: ""; counter-increment: none }
   </style>

--------------

ESP32 管脚配置需要注意什么？
-------------------------------------

  ESP32 系列模组分为 ESP32-WROOM 系列和 ESP32-WROVER 系列，GPIO 使用配置注意事项如下。

  WROOM-32/32D/32U 系列共有 26 个 管脚可供客户使用，注意事项如下：

  - GPIO6 ～ GPIO11 被内置 flash 占用，不可用做它用； 
  - GPIO34、35、36 和 39 为输入管脚，不具备输出能力；
  - ESP32 内置 GPIO 矩阵，部分外设接口可以配置到任意空闲管脚上。即硬件设计时，不需要严格将某些功能固定在某些管脚上。

  详细信息可以参考 `《ESP32 技术规格书》 <https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_cn.pdf>`_ 中表格 9 的内容。

  WROVER／WROVER-I／WROVER-B／WROVER-IB 共有 24 个管脚可供客户使用，注意事项如下： 

  - GPIO6 ～ GPIO11 被内置 flash 占用，不可用做它用； 
  - GPIO34、35、36 和 39 为输入管脚，不具备输出能力；
  - WROVER 系列模组中，GPIO12 由于在模组内部被上拉，不建议用做触摸传感功能；
  - ESP32 内置 GPIO 矩阵，部分外设接口可以配置到任意空闲管脚上。即硬件设计时，不需要严格将某些功能固定在某些管脚上。

  详细信息可以参考 `《ESP32 技术规格书》 <https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_cn.pdf>`_ 中表格 9 的内容。 

  ESP32 有 3 组 UART，但下载只可使用 UART0，且管脚固定。

----------------------------

ESP8266 部分 GPIO 出现高电平的原因是什么？
---------------------------------------------------------

  - 根据硬件设计，部分 GPIO 存在默认上下拉状态，所以在系统初始化时，该管脚的电平状态不受程序控制，所以会出现程序在引导过程中部分 GPIO 电平不正确。
  - 如果需要使用这些 GPIO ，硬件上建议外接器件与默认上下拉电平一致，软件可以在引导加载程序过程中调整电平状态，软件方法也会存在短暂电平异常。

--------------

ESP32 是否可以关闭线程调度使用一个单独的 CPU 以实现 GPIO 实时控制？
--------------------------------------------------------------------------

  - 目前 SDK 没有相关的配置选择供 CPU1 单独运行，两个核心只支持 SMP，不支持 AMP。
  - 解决输出波形被打断的问题有以下解决方案:

    - 使用硬件的信号输出，选择相关数字协议实现 SPI、I2C、I2S 等，特殊用法 SPI 取信号输出线产生波形。
    - 硬件 RMT 是否可以产生想要的波形，并达到足够的长度。
    - 硬件中断中产生相应波形，需要将所有回调放入 IRAM 中。
    - 可以利用芯片中的协处理器，它可以当作无操作系统的单片机，但目前只支持汇编语言。

--------------

ESP32 GPIO 电平翻转速度是多少？
--------------------------------------

  GPIO 电平翻转大约耗时 300 ns。

--------------

ESP32 当⼀些 RTC 外设的电源打开时（SARADC1、SARADC2、AMP、HALL 传感器），GPIO36 和 GPIO39 的数字输⼊会被拉低约 80 ns，如何解决？
--------------------------------------------------------------------------------------------------------------------------------------------------------

  当⽤户决定把⽤于控制以上传感器的电源域打开时，应当忽略来⾃ GPIO36 和 GPIO39 的输⼊。

--------------

ESP32 如果多个 GPIO 管脚配置了沿中断，则硬件可能⽆法正确触发中断。如何解决？
------------------------------------------------------------------------------------------------

  - 解决⽅法 1：

    - 要实现 GPIO 的上升沿中断，按照下⾯的步骤实现：

        1. 配置 GPIO 的中断类型为⾼；
        2. 配置 CPU 的中断类型为 edge；
        3. CPU 的中断服务响应后，把 GPIO 的中断类型改为低。此时会发⽣第⼆次中断，需要 CPU 忽略这次中断服务程序。

    - 同理，要实现 GPIO 的下降沿中断，则按如下步骤进⾏配置：

        1. 配置 GPIO 的中断类型为低；
        2. 配置 CPU 的中断类型为 edge；
        3. CPU 的中断服务响应后，把 GPIO 的中断类型改为⾼。此时会发⽣第⼆次中断，需要 CPU 忽略这次中断服务程序。

  - 解决⽅法 2：
  
    假设 GPIO0 ~ GPIO31 为 Group1，GPIO32 ~ GPIO39 为 Group2，则：

    - ⼀个 group 中同时只能有⼀个沿中断；如果有⼀个沿中断，则不能有电平中断。
    - ⼀个 group 中如果没有沿中断，则可以有多组电平中断。

--------------

使用 ESP-WROOM-02D 模组，GPIO0、GPIO15、GPIO1 和 GPIO3 是否可作为普通 GPIO 使用?
----------------------------------------------------------------------------------------------------------------------------------

  - Strapping 管脚（GPIO0 和 GPIO15）和下载管脚（GPIO1 和 GPIO3）可以作为普通 GPIO 使用。 
  - 使用 Strapping 管脚作为普通 GPIO 使用时，在 flash 下载模式时需要注意 Strapping 管脚电平的要求。

---------------

ESP32-C3 系列芯片将 GPIO19 配置成输入下拉时，读取该 IO 口状态依旧显示高电平，但配置 ESP32-C3 的其他管脚或者其他芯片的管脚为输入下拉时，均正常显示为低电平？
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  - ESP32-C3 的 GPIO19 为 USB 管脚，USB 管脚的上拉电阻由管脚上拉和 USB 上拉共同控制，当其中一种上拉方式为 1 时，对应的上拉电阻就会使能。
  - GPIO19 是默认 USB 上拉使能的，因此配置了管脚为输入下拉后依旧是上拉使能，管脚显示高电平。
  - 如果需要修改，在 ``USB_SERIAL_JTAG_DP_PULLUP`` 寄存器进行配置。

-----------------------

使用 ESP-IDF release/v4.2 版本的 SDK，ESP32 如何设置单个 GPIO 同时作为输入/输出模式？
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  可使用 `esp_err_t gpio_set_direction(gpio_num_t gpio_num, gpio_mode_t mode) <https://docs.espressif.com/projects/esp-idf/zh_CN/release-v4.2/esp32/api-reference/peripherals/gpio.html#_CPPv418gpio_set_direction10gpio_num_t11gpio_mode_t>`_ API 来设置。
